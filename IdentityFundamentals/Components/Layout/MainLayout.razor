@using IdentityFundamentals.Utils
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider

<div class="page">
    <div class="sidebar">
        @*<AuthorizeView>
            Any authenticated user
        </AuthorizeView>
        
        <AuthorizeView Roles="@Cnt.RoleAdmin">
            Admin user
        </AuthorizeView>
        
        <AuthorizeView Roles="@Cnt.RoleClient">
            Client user
        </AuthorizeView>*@
        
        <AuthorizeView Roles="@Cnt.RoleAdmin">
            <NavMenu/>
        </AuthorizeView>
    </div>

    <main>
        @if (_visibleNavigation) <NavBar/>
        
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code
{
    private bool _visibleNavigation;

    protected override async Task OnInitializedAsync()
    {
        _visibleNavigation = await ShowNavBar();
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _visibleNavigation = await ShowNavBar();
    }
    
    

    private async Task<bool> ShowNavBar()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var auth = user.Identity is not null && user.Identity.IsAuthenticated;

        if (!auth)
            return true;
        
        // Update navbar for admins users
        if (!user.IsInRole(Cnt.RoleAdmin))
            return true;

        return false;
    }
}














